// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TransactionsExample.Infrastructure.Repositories;


#nullable disable

namespace TransactionsExample.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TransactionsExample.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 2,
                            CreatedAt = new DateTime(2025, 7, 15, 15, 14, 24, 824, DateTimeKind.Utc).AddTicks(9432),
                            CustomerName = "Alice",
                            ProductId = 1,
                            TotalPrice = 2400.0
                        },
                        new
                        {
                            Id = 2,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 7, 15, 15, 14, 24, 824, DateTimeKind.Utc).AddTicks(9435),
                            CustomerName = "Bob",
                            ProductId = 2,
                            TotalPrice = 300.0
                        },
                        new
                        {
                            Id = 3,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 7, 15, 15, 14, 24, 824, DateTimeKind.Utc).AddTicks(9438),
                            CustomerName = "Charlie",
                            ProductId = 3,
                            TotalPrice = 240.0
                        });
                });

            modelBuilder.Entity("TransactionsExample.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Gaming laptop",
                            Name = "Laptop",
                            Price = 1200.0,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Description = "4K Monitor",
                            Name = "Monitor",
                            Price = 300.0,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            Description = "Mechanical keyboard",
                            Name = "Keyboard",
                            Price = 80.0,
                            Stock = 50
                        },
                        new
                        {
                            Id = 4,
                            Description = "Wireless mouse",
                            Name = "Mouse",
                            Price = 60.0,
                            Stock = 40
                        },
                        new
                        {
                            Id = 5,
                            Description = "Noise cancelling",
                            Name = "Headphones",
                            Price = 150.0,
                            Stock = 25
                        });
                });

            modelBuilder.Entity("TransactionsExample.Models.Order", b =>
                {
                    b.HasOne("TransactionsExample.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
